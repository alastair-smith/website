name: Validate App
run-name: ${{ github.actor }} is validating application code on branch ${{ github.head_ref }} ðŸš€
on: [pull_request]
defaults:
  run:
    working-directory: ./frontend
jobs:
  audit-node-modules:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Audit packages
        run: npm audit

  lint-js:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Lint
        run: npm run lint

  prettier:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Check Prettier
        run: npm run prettier:check

  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Run unit tests
        run: npm run test:unit
  
  integration-tests:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Run integration tests
        run: npm run test:integration

  deploy-preview:
    runs-on: ubuntu-latest
    needs:
      - audit-node-modules
      - lint-js
      - prettier
      - unit-tests
      - integration-tests
    container:
      image: node:18.17.1-alpine3.18
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Build
        run: npm run build:cloudflare
      - name: Deploy
        run: npm run deploy

  register-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-preview]
    steps:
      - name: Register Deployment
        uses: actions/github-script@v6
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `${{ github.head_ref }}`,
              environment: `preview-${{ github.head_ref }}`,
              auto_merge: false,
              transient_environment: true,
              required_contexts: [],
              production_environment: false
            })
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: `https://${{ github.head_ref }}.website-frontend-4fb.pages.dev`
            }) 

  comment:
    runs-on: ubuntu-latest
    needs: [deploy-preview]
    steps:
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            Deployed to <https://${{ github.head_ref }}.website-frontend-4fb.pages.dev>.

  e2e-tests:
    runs-on: ubuntu-latest
    needs:
      - deploy-preview
    container:
      image: node:18.17.1-alpine3.18
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Run E2E tests
        run: npm run test:e2e