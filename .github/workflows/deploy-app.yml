name: Deploy App
run-name: ${{ github.actor }} is is deploying to production ðŸš€
on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./frontend
jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: node:18.17.1
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install packages
        run: npm ci
      - name: Build
        run: npm run build:cloudflare
      - name: Deploy
        run: npm run deploy -- --branch main

  register-deployment:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Register Deployment
        uses: actions/github-script@v6
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'main',
              environment: 'production',
              auto_merge: false,
              transient_environment: false,
              required_contexts: [],
              production_environment: true
            })
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: 'https://alsmith.dev'
            })
